-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Fast specialisation of Data.Ratio for Int.
--   
--   Fast specialisation of Data.Ratio for Int.
--   
--   Runs about ten times faster than Data.Int while being half as fast as
--   floating-point types.
@package ratio-int
@version 0.1.2


-- | Provides a specialised version of <a>Ratio</a> for <a>Int</a>.
--   
--   Runs about ten times faster than <a>Ratio</a> while being half as fast
--   as floating-point types.
module Data.RatioInt

-- | Rational numbers, with numerator and denominator of the <a>Int</a>
--   type.
data RatioInt

-- | Forms the ratio of two <a>Int</a> numbers.
(%) :: Int -> Int -> RatioInt
instance GHC.Read.Read Data.RatioInt.RatioInt
instance GHC.Show.Show Data.RatioInt.RatioInt
instance GHC.Classes.Eq Data.RatioInt.RatioInt
instance GHC.Classes.Ord Data.RatioInt.RatioInt
instance GHC.Num.Num Data.RatioInt.RatioInt
instance GHC.Real.Fractional Data.RatioInt.RatioInt
instance GHC.Real.Real Data.RatioInt.RatioInt
instance GHC.Real.RealFrac Data.RatioInt.RatioInt
instance GHC.Enum.Enum Data.RatioInt.RatioInt
instance Foreign.Storable.Storable Data.RatioInt.RatioInt
